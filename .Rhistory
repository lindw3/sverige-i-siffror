library(gridExtra)
library(openxlsx)
library(patchwork)
library(ggthemes)
library(plotly)
library(htmlwidgets)
library(reticulate)
library(ggridges)
library(forecast)
library(GGally)
library(cluster)
library(sf)
partisympati_kön_inkomst <- read_excel("data/partisympati_kön_inkomst.xlsx",
col_types = c("numeric", "text", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
library(jsonlite)
library(ggplot2)
library(stringr)
library(scales)
library(dplyr)
library(tidyr)
library(DT)
library(png)
library(data.table)
library(magrittr)
library(gridExtra)
library(openxlsx)
library(patchwork)
library(ggthemes)
library(plotly)
library(htmlwidgets)
library(reticulate)
library(ggridges)
library(forecast)
library(GGally)
library(cluster)
library(sf)
# Tema för figurer
sis_theme <- theme(plot.background = element_rect(fill = "#e5ad59") ,
plot.caption = element_text(hjust = 0) ,
panel.background = element_rect(fill = "white"),
axis.line.x = element_line(color = "black" , linewidth = 0.75) ,
axis.line.y = element_line(color = "black" , linewidth = 0.75) ,
plot.title = element_text(color = "white" , size = 16 , family = "sans"),
panel.grid.major.y  = element_line(color = "#e5ad59" , linetype = "dotted"),
panel.grid.major.x = element_line(NULL),
panel.grid.minor = element_line(NULL),
legend.background = element_rect(fill = "white"),
legend.key = element_rect(fill = "white"),
legend.text = element_text(color = "black" , family = "sans") ,
legend.title = element_text(color = "black" , family = "sans") ,
text = element_text(size=12, face="plain", color = "white" , family = "sans"),
axis.title = element_text(color = "white" , family = "sans"),
axis.text = element_text(color = "white" , family = "sans"))
# Färger
# SCB-DATA
# Partisympatier efter kön och inkomst
partisympati_kön_inkomst <- read_excel("data/partisympati_kön_inkomst.xlsx",
col_types = c("numeric", "text", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
library(readxl)
partisympati_kön_inkomst <- read_excel("data/partisympati_kön_inkomst.xlsx",
col_types = c("numeric", "text", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
colnames(partisympati_kön_inkomst) <- c("År" , "Kön" , "Inkomst" , "Moderaterna" , "Centerpartiet" , "Liberalerna" ,
"Kristdemokraterna" , "Miljöpartiet" , "Socialdemokraterna" , "Vänsterpartiet" ,
"Sverigedemokraterna" , "Övriga partier")
# Förtroendevalda efter kön och ålder
förtroendevalda_kommun_ålder <- read_excel("data/förtroendevalda_kommun_ålder.xlsx")
förtroendevalda_kommun_ålder <- förtroendevalda_kommun_ålder %>%
pivot_longer(!c(Parti, Kön, Kategori, Mätvariabel) , names_to = "År" , values_to = "Andel")
# Anställning utifrån sektor
anställning_sektor <- read_excel("data/anställning_sektor.xlsx")
# Löner utifrån utbildningsnivå
lön_utbildningsnivå <- read_excel("data/lön_utbildningsnivå.xlsx")
# Lönespridning
lönespridning <- read_excel("data/lönespridning.xlsx")
lön_utbildningsnivå %>%
filter(Sektor != "Samtliga" , Kön != "Totalt" , Utbildning == "Alla") %>%
ggplot(aes(x = Sektor , y = Lön, fill = Kön,
text = paste(Kön, "\nSektor: ", Sektor , "\nGenomsnittslön: ", comma(Lön)))) +
geom_col(position = "dodge") +
ss_theme +
ylab("Genomsnittslön") + xlab(NULL) +
scale_fill_manual(values = c("Kvinnor" = "#ffb1b1",
"Män" = "#64b6ee")) +
scale_y_continuous(labels = comma)
lön_utbildningsnivå %>%
filter(Sektor != "Samtliga" , Kön != "Totalt" , Utbildning == "Alla") %>%
ggplot(aes(x = Sektor , y = Lön, fill = Kön,
text = paste(Kön, "\nSektor: ", Sektor , "\nGenomsnittslön: ", comma(Lön)))) +
geom_col(position = "dodge") +
sis_theme +
ylab("Genomsnittslön") + xlab(NULL) +
scale_fill_manual(values = c("Kvinnor" = "#ffb1b1",
"Män" = "#64b6ee")) +
scale_y_continuous(labels = comma)
rm(lönespridning)
levels = c("81-100 %" , "61-80 %" ,  "41-60 %" , "21-40 %" , "0-20 %")
df <- partisympati_kön_inkomst %>%
filter(År == 2024 ,
Kön == "Båda") %>%
pivot_longer(!c(År, Kön, Inkomst) , names_to = "Parti" , values_to = "Andel")
p <- df %>%
ggplot(aes(y = Parti, x = Andel, fill = factor(Inkomst , level = levels),
text = paste(Parti, "\nInkomst: ", Inkomst, "\nAndel: ", Andel, "%"))) +
geom_col(position = "dodge") +
xlab("Andel, %") + ylab(NULL) +
labs(fill = "Inkomstpercentil") +
sis_theme +
scale_fill_manual(values = c("0-20 %" = "#ffb1b1",
"21-40 %" = "#64b6ee" ,
"41-60 %" = "#94c58c",
"61-80 %" = "#ffff9a" ,
"81-100 %" = "#ffcff1"))
p
df <- förtroendevalda_kommun_ålder %>%
filter(Kön == "Män",
Mätvariabel == "Könsfördelning" ,
Kategori == "Totalt"
)
p <- df %>%
ggplot(aes(x = År , y = Andel/100 , group = Parti , color = Parti,
text = paste(År, "\nParti: " , Parti, "\nAndel män: " , Andel , "%"))) +
geom_line(linewidth = 1) +
scale_y_continuous(limits = c(0 , 1),
breaks = c(0.5),
labels = scales::percent_format(accuracy = 1)) +
ylab("Andel, %") + xlab(NULL) +
partifärger_colour +
sis_theme
partifärger_colour <- scale_colour_manual(values = c("Centerpartiet" = "#009933" ,
"Feministiskt initiativ" = "#CD1B68" ,
"Kristdemokraterna" = "#000077" ,
"Liberalerna" = "#006AB3" ,
"Miljöpartiet" = "#83CF39" ,
"Moderaterna" = "#52BDEC" ,
"Piratpartiet" = "#572B85" ,
"Socialdemokraterna" = "#E8112d" ,
"Sverigedemokraterna" = "#DDDD00" ,
"Vänsterpartiet" = "#DA291C" ,
"Junilistan" = "#ff8c00" ,
"Övriga partier" = "grey"))
partifärger_fill <- scale_fill_manual(values = c("Centerpartiet" = "#009933" ,
"Feministiskt initiativ" = "#CD1B68" ,
"Kristdemokraterna" = "#000077" ,
"Liberalerna" = "#006AB3" ,
"Miljöpartiet" = "#83CF39" ,
"Moderaterna" = "#52BDEC" ,
"Piratpartiet" = "#572B85" ,
"Socialdemokraterna" = "#E8112d" ,
"Sverigedemokraterna" = "#DDDD00" ,
"Vänsterpartiet" = "#DA291C" ,
"Junilistan" = "#ff8c00" ,
"Övriga partier" = "grey"))
df <- förtroendevalda_kommun_ålder %>%
filter(Kön == "Män",
Mätvariabel == "Könsfördelning" ,
Kategori == "Totalt"
)
p <- df %>%
ggplot(aes(x = År , y = Andel/100 , group = Parti , color = Parti,
text = paste(År, "\nParti: " , Parti, "\nAndel män: " , Andel , "%"))) +
geom_line(linewidth = 1) +
scale_y_continuous(limits = c(0 , 1),
breaks = c(0.5),
labels = scales::percent_format(accuracy = 1)) +
ylab("Andel, %") + xlab(NULL) +
partifärger_colour +
sis_theme
p
p <- anställning_sektor %>%
filter(Kön != "Totalt" ,
Sektor != "Samtliga") %>%
mutate(Andel = `Antal anställda` / sum(`Antal anställda`)) %>%
ggplot(aes(x = Sektor , y = `Antal anställda` , fill = Kön,
text = paste(Sektor , "\nAntal: ", comma(`Antal anställda`),
"\nAndel: ", round(Andel, 2) * 100 , "%"))) +
geom_col(position = "dodge") +
sis_theme +
xlab(NULL) +
scale_fill_manual(values = c("Kvinnor" = "#ffb1b1",
"Män" = "#64b6ee")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 6), labels = scales::comma)
p
p <- lön_utbildningsnivå %>%
filter(Sektor != "Samtliga" , Kön != "Totalt" , Utbildning == "Alla") %>%
ggplot(aes(x = Sektor , y = Lön, fill = Kön,
text = paste(Kön, "\nSektor: ", Sektor , "\nGenomsnittslön: ", comma(Lön)))) +
geom_col(position = "dodge") +
sis_theme +
ylab("Genomsnittslön") + xlab(NULL) +
scale_fill_manual(values = c("Kvinnor" = "#ffb1b1",
"Män" = "#64b6ee")) +
scale_y_continuous(labels = comma)
p
p <- lön_utbildningsnivå %>%
filter(Sektor == "Samtliga" , Kön != "Totalt" , Utbildning != "Alla") %>%
ggplot(aes(x = factor(Utbildning, levels = levels) , y = Lön, fill = Kön,
text = paste(Kön, "\nUtbildningsnivå: ", Utbildning , "\nGenomsnittslön: ", comma(Lön)))) +
geom_col(position = "dodge") +
sis_theme +
ylab("Genomsnittslön") +
xlab(NULL) +
theme(axis.text.x = element_text(angle = 70, hjust = 1 , vjust = 1)) +
scale_fill_manual(values = c("Kvinnor" = "#ffb1b1",
"Män" = "#64b6ee")) +
scale_y_continuous(labels = comma)
p
lön_utbildningsnivå
lön_utbildningsnivå %>%
filter(Sektor == "Samtliga" , Kön != "Totalt" , Utbildning != "Alla") %>%
ggplot(aes(x = factor(Utbildning, levels = levels) , y = Lön, fill = Kön,
text = paste(Kön, "\nUtbildningsnivå: ", Utbildning , "\nGenomsnittslön: ", comma(Lön)))) +
geom_col(position = "dodge") +
sis_theme +
ylab("Genomsnittslön") +
xlab(NULL) +
theme(axis.text.x = element_text(angle = 70, hjust = 1 , vjust = 1)) +
scale_fill_manual(values = c("Kvinnor" = "#ffb1b1",
"Män" = "#64b6ee")) +
scale_y_continuous(labels = comma)
lön_utbildningsnivå %>%
filter(Sektor == "Samtliga" , Kön != "Totalt" , Utbildning != "Alla") %>%
ggplot(aes(x = factor(Utbildning, levels = levels) , y = Lön, fill = Kön,
text = paste(Kön, "\nUtbildningsnivå: ", Utbildning , "\nGenomsnittslön: ", comma(Lön)))) +
geom_col(position = "dodge") +
sis_theme +
ylab("Genomsnittslön") +
xlab(NULL) +
theme(axis.text.x = element_text(angle = 70, hjust = 1 , vjust = 1)) +
scale_fill_manual(values = c("Kvinnor" = "#ffb1b1",
"Män" = "#64b6ee")) +
scale_y_continuous(labels = comma)
View(lön_utbildningsnivå)
levels = c("Förgymnasial -9 år" , "Förgymnasial 9+ år" , "Gymnasial -3 år", "Gymnasial 3 år",
"Eftergymnasial -3 år", "Eftergymnasial 3+ år", "Forskarutbildning")
p <- lön_utbildningsnivå %>%
filter(Sektor == "Samtliga" , Kön != "Totalt" , Utbildning != "Alla") %>%
ggplot(aes(x = factor(Utbildning, levels = levels) , y = Lön, fill = Kön,
text = paste(Kön, "\nUtbildningsnivå: ", Utbildning , "\nGenomsnittslön: ", comma(Lön)))) +
geom_col(position = "dodge") +
sis_theme +
ylab("Genomsnittslön") +
xlab(NULL) +
theme(axis.text.x = element_text(angle = 70, hjust = 1 , vjust = 1)) +
scale_fill_manual(values = c("Kvinnor" = "#ffb1b1",
"Män" = "#64b6ee")) +
scale_y_continuous(labels = comma)
p
df <- read.csv("https://ourworldindata.org/grapher/children-born-per-woman.csv?v=1&csvType=full&useColumnShortNames=true")
df <- df %>%
mutate(fertility_rate_hist = round(fertility_rate_hist, 2))
p <- df %>%
filter(Entity == "Sweden") %>%
ggplot(aes(x = Year, y = fertility_rate_hist  , group = 2,
text = paste("År:" , Year ,
"\nBarn:" , fertility_rate_hist))) +
geom_line(linewidth = 1.2) +
sis_theme +
scale_x_continuous(breaks = c(1891, 1935, 2023)) +
scale_y_continuous(limits = c(0 , 4.2) ,
breaks = 0:4) +
xlab(NULL) + ylab("Barn per kvinna")
p
df %>%
filter(Entity == "Sweden") %>%
ggplot(aes(x = Year, y = fertility_rate_hist  , group = 2,
text = paste("År:" , Year ,
"\nBarn:" , fertility_rate_hist))) +
geom_line(linewidth = 1) +
sis_theme +
scale_x_continuous(breaks = c(1891, 1935, 2023)) +
scale_y_continuous(limits = c(0 , 4.2) ,
breaks = 0:4) +
xlab(NULL) + ylab("Barn per kvinna")
levels = c("81-100 %" , "61-80 %" ,  "41-60 %" , "21-40 %" , "0-20 %")
df <- partisympati_kön_inkomst %>%
filter(År == 2024 ,
Kön == "Båda") %>%
pivot_longer(!c(År, Kön, Inkomst) , names_to = "Parti" , values_to = "Andel")
p <- df %>%
ggplot(aes(y = Parti, x = Andel, fill = factor(Inkomst , level = levels),
text = paste(Parti, "\nInkomst: ", Inkomst, "\nAndel: ", Andel, "%"))) +
geom_col(position = "dodge") +
xlab("Andel, %") + ylab(NULL) +
labs(fill = "Inkomstpercentil") +
sis_theme +
scale_fill_manual(values = c("0-20 %" = "#5991E5",
"21-40 %" = "#D7E559" ,
"41-60 %" = "#E56759",
"61-80 %" = "#AD59E5" ,
"81-100 %" = "#59E5AD"))
p
# SCB-DATA
# Partisympatier efter kön och inkomst
partisympati_kön_inkomst <- read_excel("data/partisympati_kön_inkomst.xlsx",
col_types = c("numeric", "text", "text",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric",
"numeric", "numeric", "numeric"))
colnames(partisympati_kön_inkomst) <- c("År" , "Kön" , "Inkomst" , "Moderaterna" , "Centerpartiet" , "Liberalerna" ,
"Kristdemokraterna" , "Miljöpartiet" , "Socialdemokraterna" , "Vänsterpartiet" ,
"Sverigedemokraterna" , "Övriga partier")
# Förtroendevalda efter kön och ålder
förtroendevalda_kommun_ålder <- read_excel("data/förtroendevalda_kommun_ålder.xlsx")
förtroendevalda_kommun_ålder <- förtroendevalda_kommun_ålder %>%
pivot_longer(!c(Parti, Kön, Kategori, Mätvariabel) , names_to = "År" , values_to = "Andel")
# Anställning utifrån sektor
anställning_sektor <- read_excel("data/anställning_sektor.xlsx")
# Löner utifrån utbildningsnivå
lön_utbildningsnivå <- read_excel("data/lön_utbildningsnivå.xlsx")
### FIGURERNA ###
# Partisympatier efter inkomst
levels = c("81-100 %" , "61-80 %" ,  "41-60 %" , "21-40 %" , "0-20 %")
df <- partisympati_kön_inkomst %>%
filter(År == 2024 ,
Kön == "Båda") %>%
pivot_longer(!c(År, Kön, Inkomst) , names_to = "Parti" , values_to = "Andel")
p <- df %>%
ggplot(aes(y = Parti, x = Andel, fill = factor(Inkomst , level = levels),
text = paste(Parti, "\nInkomst: ", Inkomst, "\nAndel: ", Andel, "%"))) +
geom_col(position = "dodge") +
xlab("Andel, %") + ylab(NULL) +
labs(fill = "Inkomstpercentil") +
sis_theme +
scale_fill_manual(values = c("0-20 %" = "#5991E5",
"21-40 %" = "#D7E559" ,
"41-60 %" = "#E56759",
"61-80 %" = "#AD59E5" ,
"81-100 %" = "#59E5AD"))
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/partisympatier_inkomst.html")
# Andel förtroendevalda i kommun efter kön
df <- förtroendevalda_kommun_ålder %>%
filter(Kön == "Män",
Mätvariabel == "Könsfördelning" ,
Kategori == "Totalt"
)
p <- df %>%
ggplot(aes(x = År , y = Andel/100 , group = Parti , color = Parti,
text = paste(År, "\nParti: " , Parti, "\nAndel män: " , Andel , "%"))) +
geom_line(linewidth = 1) +
scale_y_continuous(limits = c(0 , 1),
breaks = c(0.5),
labels = scales::percent_format(accuracy = 1)) +
ylab("Andel, %") + xlab(NULL) +
partifärger_colour +
sis_theme
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/förtroendevalda_kön.html")
# Anställning utifrån sektor och kön
p <- anställning_sektor %>%
filter(Kön != "Totalt" ,
Sektor != "Samtliga") %>%
mutate(Andel = `Antal anställda` / sum(`Antal anställda`)) %>%
ggplot(aes(x = Sektor , y = `Antal anställda` , fill = Kön,
text = paste(Sektor , "\nAntal: ", comma(`Antal anställda`),
"\nAndel: ", round(Andel, 2) * 100 , "%"))) +
geom_col(position = "dodge") +
sis_theme +
xlab(NULL) +
scale_fill_manual(values = c("Kvinnor" = "#E56759",
"Män" = "#5991E5")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 6), labels = scales::comma)
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/anställning_sektor_kön.html")
# Genomsnittslön utifrån sektor och kön
p <- lön_utbildningsnivå %>%
filter(Sektor != "Samtliga" , Kön != "Totalt" , Utbildning == "Alla") %>%
ggplot(aes(x = Sektor , y = Lön, fill = Kön,
text = paste(Kön, "\nSektor: ", Sektor , "\nGenomsnittslön: ", comma(Lön)))) +
geom_col(position = "dodge") +
sis_theme +
ylab("Genomsnittslön") + xlab(NULL) +
scale_fill_manual(values = c("Kvinnor" = "#ffb1b1",
"Män" = "#5991E5")) +
scale_y_continuous(labels = comma)
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = FALSE)
saveWidget(img, "images/lön_sektor_kön.html")
# Genomsnittslöner utifrån utbildningsnivå och kön
levels = c("Förgymnasial -9 år" , "Förgymnasial 9+ år" , "Gymnasial -3 år", "Gymnasial 3 år",
"Eftergymnasial -3 år", "Eftergymnasial 3+ år", "Forskarutbildning")
p <- lön_utbildningsnivå %>%
filter(Sektor == "Samtliga" , Kön != "Totalt" , Utbildning != "Alla") %>%
ggplot(aes(x = factor(Utbildning, levels = levels) , y = Lön, fill = Kön,
text = paste(Kön, "\nUtbildningsnivå: ", Utbildning , "\nGenomsnittslön: ", comma(Lön)))) +
geom_col(position = "dodge") +
sis_theme +
ylab("Genomsnittslön") +
xlab(NULL) +
theme(axis.text.x = element_text(angle = 70, hjust = 1 , vjust = 1)) +
scale_fill_manual(values = c("Kvinnor" = "#E56759",
"Män" = "#5991E5")) +
scale_y_continuous(labels = comma)
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = FALSE)
saveWidget(img, "images/lön_utbildning_kön.html")
# Barnafödande i Sverige
df <- read.csv("https://ourworldindata.org/grapher/children-born-per-woman.csv?v=1&csvType=full&useColumnShortNames=true")
df <- df %>%
mutate(fertility_rate_hist = round(fertility_rate_hist, 2))
p <- df %>%
filter(Entity == "Sweden") %>%
ggplot(aes(x = Year, y = fertility_rate_hist  , group = 2,
text = paste("År:" , Year ,
"\nBarn:" , fertility_rate_hist))) +
geom_line(linewidth = 1) +
sis_theme +
scale_x_continuous(breaks = c(1891, 1935, 2023)) +
scale_y_continuous(limits = c(0 , 4.2) ,
breaks = 0:4) +
xlab(NULL) + ylab("Barn per kvinna")
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/barnafödande_sverige.html")
# Sverige i jämförelse med utvalda länder
p <- anställning_sektor %>%
filter(Kön != "Totalt" ,
Sektor != "Samtliga") %>%
mutate(Andel = `Antal anställda` / sum(`Antal anställda`)) %>%
ggplot(aes(x = Sektor , y = `Antal anställda` , fill = Kön,
text = paste(Kön, "\nSektor:" , Sektor , "\nAntal: ", comma(`Antal anställda`),
"\nAndel: ", round(Andel, 2) * 100 , "%"))) +
geom_col(position = "dodge") +
sis_theme +
xlab(NULL) +
scale_fill_manual(values = c("Kvinnor" = "#E56759",
"Män" = "#5991E5")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 6), labels = scales::comma)
library(jsonlite)
library(ggplot2)
library(stringr)
library(scales)
library(dplyr)
library(tidyr)
library(DT)
p <- anställning_sektor %>%
filter(Kön != "Totalt" ,
Sektor != "Samtliga") %>%
mutate(Andel = `Antal anställda` / sum(`Antal anställda`)) %>%
ggplot(aes(x = Sektor , y = `Antal anställda` , fill = Kön,
text = paste(Kön, "\nSektor:" , Sektor , "\nAntal: ", comma(`Antal anställda`),
"\nAndel: ", round(Andel, 2) * 100 , "%"))) +
geom_col(position = "dodge") +
sis_theme +
xlab(NULL) +
scale_fill_manual(values = c("Kvinnor" = "#E56759",
"Män" = "#5991E5")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 6), labels = scales::comma)
p
p <- lön_utbildningsnivå %>%
filter(Sektor != "Samtliga" , Kön != "Totalt" , Utbildning == "Alla") %>%
ggplot(aes(x = Sektor , y = Lön, fill = Kön,
text = paste(Kön, "\nSektor: ", Sektor , "\nGenomsnittslön: ", comma(Lön)))) +
geom_col(position = "dodge") +
sis_theme +
ylab("Genomsnittslön") + xlab(NULL) +
scale_fill_manual(values = c("Kvinnor" = "#ffb1b1",
"Män" = "#5991E5")) +
scale_y_continuous(labels = comma)
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = FALSE)
library(jsonlite)
library(ggplot2)
library(stringr)
library(scales)
library(dplyr)
library(tidyr)
library(DT)
library(png)
library(data.table)
library(magrittr)
library(gridExtra)
library(openxlsx)
library(patchwork)
library(ggthemes)
library(plotly)
library(htmlwidgets)
library(reticulate)
library(ggridges)
library(forecast)
library(GGally)
library(cluster)
library(sf)
library(readxl)
p <- anställning_sektor %>%
filter(Kön != "Totalt" ,
Sektor != "Samtliga") %>%
mutate(Andel = `Antal anställda` / sum(`Antal anställda`)) %>%
ggplot(aes(x = Sektor , y = `Antal anställda` , fill = Kön,
text = paste(Kön, "\nSektor:" , Sektor , "\nAntal: ", comma(`Antal anställda`),
"\nAndel: ", round(Andel, 2) * 100 , "%"))) +
geom_col(position = "dodge") +
sis_theme +
xlab(NULL) +
scale_fill_manual(values = c("Kvinnor" = "#E56759",
"Män" = "#5991E5")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 6), labels = scales::comma)
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/anställning_sektor_kön.html")
