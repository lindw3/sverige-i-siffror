"Höginkomstländer")
p <- df %>%
filter(Land %in% c("Sweden",
"High-income countries",
"Low-income countries",
"Lower-middle-income countries",
"Upper-middle-income countries")) %>%
mutate(
Land = case_when(
Land == "Sweden" ~ "Sverige",
Land == "High-income countries" ~ "Höginkomstländer",
Land == "Low-income countries" ~ "Låginkomstländer",
Land == "Lower-middle-income countries" ~ "Undre medelinkomstländer",
Land == "Upper-middle-income countries" ~ "Övre medelinkomstländer",
TRUE ~ Land
)
) %>%
ggplot(aes(x = År, y = Medel,
group = Land, colour = factor(Land, levels = levels),
text = paste("År:" , År ,
"\nLand:" , Land,
"\nMedellivslängd:" , round(Medel, 1)))) +
geom_line(linewidth = 1) +
scale_colour_manual(values = c(
"Sverige" = "#5991E5",
"Låginkomstländer" = "#D7E559",
"Undre medelinkomstländer" = "#E56759",
"Övre medelinkomstländer" = "#AD59E5",
"Höginkomstländer" = "#59E5AD"
)) +
sis_theme +
scale_x_continuous(limits = c(1950, max(df$År)),
breaks = c(1950, max(df$År))) +
scale_y_continuous(limits = c(0, max(df$Medel, na.rm = TRUE) + 1)) +
xlab(NULL) + ylab("Medellivslängd") + labs(colour = "Land/region")
levels <- c("Sverige",
"Låginkomstländer",
"Undre medelinkomstländer",
"Övre medelinkomstländer",
"Höginkomstländer")
df %>%
filter(Land %in% c("Sweden",
"High-income countries",
"Low-income countries",
"Lower-middle-income countries",
"Upper-middle-income countries")) %>%
mutate(
Land = case_when(
Land == "Sweden" ~ "Sverige",
Land == "High-income countries" ~ "Höginkomstländer",
Land == "Low-income countries" ~ "Låginkomstländer",
Land == "Lower-middle-income countries" ~ "Undre medelinkomstländer",
Land == "Upper-middle-income countries" ~ "Övre medelinkomstländer",
TRUE ~ Land
),
Land = factor(Land, levels = levels)
) %>%
ggplot(aes(x = År, y = Medel, colour = Land, group = Land,
text = paste("År:", År,
"\nLand:", Land,
"\nMedellivslängd:", round(Medel, 1)))) +
geom_line(linewidth = 1) +
scale_colour_manual(values = c(
"Sverige" = "#5991E5",
"Låginkomstländer" = "#D7E559",
"Undre medelinkomstländer" = "#E56759",
"Övre medelinkomstländer" = "#AD59E5",
"Höginkomstländer" = "#59E5AD"
)) +
sis_theme +
scale_x_continuous(limits = c(1950, max(df$År)),
breaks = c(1950, max(df$År))) +
scale_y_continuous(limits = c(0, max(df$Medel, na.rm = TRUE) + 1) ,
breaks = seq(0 , 80 , 20)) +
xlab(NULL) + ylab("Medellivslängd") +
labs(colour = "Land/kategori")
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/medellivslängd.html")
# Livstillfredställelse jämfört med andra länder
df <- read.csv("https://ourworldindata.org/grapher/happiness-cantril-ladder.csv?v=1&csvType=full&useColumnShortNames=true")
colnames(df) <- c("Land" , "Kod" , "År" , "Tillfredsställelse")
p <- df %>%
ggplot(aes(x = År, y = Tillfredsställelse, group = Land,
alpha = Land == "Sweden",
linewidth = Land == "Sweden",
colour = Land == "Sweden",
text = paste(
"År:" , År,
"\nLand:" , Land,
"\nLivstillfredsställelse:" , Tillfredsställelse
))) +
geom_line() +
scale_colour_manual(values = c("TRUE" = "#D7E559", "FALSE" = "#5991E5")) +
scale_alpha_manual(values = c("TRUE" = 1, "FALSE" = 0.25)) +
scale_linewidth_manual(values = c("TRUE" = 1.35, "FALSE" = 0.5)) +
sis_theme +
scale_x_continuous(breaks = c(min(df$År), max(df$År))) +
scale_y_continuous(limits = c(0, 10),
breaks = seq(0, 10, 2.5)) +
guides(alpha = "none", linewidth = "none", colour = "none") +
xlab(NULL) +
ylab("Livstillfredsställelse, skala 1-10")
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/satisfaction.html")
# Koppling mellan livstillfredställelse och GDP
df <- read.csv("https://ourworldindata.org/grapher/gdp-vs-happiness.csv?v=1&csvType=full&useColumnShortNames=true")
colnames(df) <- c("Land" , "Kod" , "År" , "Livstillfredsställelse" , "GDP", "Region")
df <- df %>%
filter(År == 2023,
Region != "")
p <- df %>%
ggplot(aes(x = GDP, y = Livstillfredsställelse ,
text = paste(Land,
"\nLivstillfredsställelse:", round(Livstillfredsställelse,2),
"\nGDP: ", comma(round(GDP))))) +
geom_point(aes(colour = Region)) +
sis_theme +
labs(colour = "Region") +
xlab("GDP per capita") + ylab("Livstillfredsställelse, skala 1-10") +
scale_color_manual(values = c(
"Africa" = "#5991E5",
"Asia" = "#D7E559",
"Europe" = "#E56759",
"North America" = "#AD59E5",
"Oceania" = "#59E5AD",
"South America" = "#e5ad59"
)) +
scale_x_log10(labels = label_number(big.mark = ",")) +
scale_y_continuous(limits = c(1, 10) ,
breaks = seq(2 , 10 , 2))
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/gdp_satisfaction.html")
# Analys: koppling mellan GDP och livstillfredsställelse
p <- df %>%
ggplot(aes(x = GDP, y = Livstillfredsställelse)) +
geom_point(aes(colour = Region)) +
geom_smooth(method = "lm" , se = FALSE, colour = "red") +
sis_theme +
labs(colour = "Region") +
xlab("GDP per capita") + ylab("Livstillfredsställelse, skala 1-10") +
scale_color_manual(values = c(
"Africa" = "#5991E5",
"Asia" = "#D7E559",
"Europe" = "#E56759",
"North America" = "#AD59E5",
"Oceania" = "#59E5AD",
"South America" = "#e5ad59"
)) +
scale_x_log10(labels = label_number(big.mark = ",")) +
scale_y_continuous(limits = c(1, 10) ,
breaks = seq(2 , 10 , 2))
model <- df %>%
mutate(GDP = GDP / 10000)  # För varje 10-tusental ökning av GDP, hur förändras livstillfredsställelse?
lm <- lm(model$Livstillfredsställelse ~ model$GDP)
# Suicid per 100 000
df <- read.csv("https://ourworldindata.org/grapher/suicide-rate-who-mdb.csv?v=1&csvType=full&useColumnShortNames=true")
colnames(df) <- c("Land" , "Kod" , "År" , "Suicid")
p <- df %>%
filter(Land == "Sweden") %>%
ggplot(aes(x = År, y = Suicid  , group = 2,
text = paste("År:" , År ,
"\nSuicid/100,000:" , round(Suicid, 2)))) +
geom_line(linewidth = 1 , colour = "#5991E5") +
sis_theme +
scale_x_continuous(breaks = c(min(df$År), max(df$År))) +
scale_y_continuous(limits = c(0 , 20) ,
breaks =  seq(0, 20, 5)) +
xlab(NULL) + ylab("Suicid per 100,000 invånare")
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/suicid_sverige.html")
# ... jämfört med andra länder
p <- df %>%
ggplot(aes(x = År, y = Suicid, group = Land,
alpha = Land == "Sweden" ,
linewidth = Land == "Sweden" ,
colour = Land == "Sweden",
text = paste("År:" , År ,
"\nLand:" , Land,
"\nSuicid/100,000:" , round(Suicid, 2)))) +
geom_line() +
scale_colour_manual(values = c("TRUE" = "#D7E559", "FALSE" = "#5991E5")) +
scale_alpha_manual(values = c("TRUE" = 1, "FALSE" = 0.25)) +
scale_linewidth_manual(values = c("TRUE" = 1.35, "FALSE" = 0.5)) +
sis_theme +
scale_x_continuous(breaks = c(min(df$År), max(df$År))) +
scale_y_continuous(limits = c(0, max(df$Suicid, na.rm = TRUE) + 1)) +
guides(alpha = "none", linewidth = "none", colour = "none") +
xlab(NULL) +
ylab("Suicid per 100,000 invånare")
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/suicid.html")
# Singelhushåll som % av totala hushåll
df <- read.csv("https://ourworldindata.org/grapher/one-person-households.csv?v=1&csvType=full&useColumnShortNames=true")
colnames(df) <- c("Land" , "Kod" , "År" , "Andel")
p <- df %>%
filter(Land == "Sweden") %>%
ggplot(aes(x = År, y = Andel  , group = 2,
text = paste("År:" , År ,
"\nAndel:" , round(Andel, 2), "%"))) +
geom_line(linewidth = 1 , colour = "#5991E5") +
sis_theme +
scale_x_continuous(breaks = c(2004, 2018)) +
scale_y_continuous(limits = c(0 , 100) ,
breaks =  seq(0, 100, 25)) +
xlab(NULL) + ylab("Andel singelhushåll, %")
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/singelhushåll_sverige.html")
# ... jämfört med andra länder
p <- df %>%
ggplot(aes(x = År, y = Andel, group = Land,
alpha = Land == "Sweden" ,
linewidth = Land == "Sweden" ,
colour = Land == "Sweden",
text = paste("År:" , År ,
"\nLand:" , Land,
"\nAndel:" , round(Andel, 2) , "%"))) +
geom_line() +
scale_colour_manual(values = c("TRUE" = "#D7E559", "FALSE" = "#5991E5")) +
scale_alpha_manual(values = c("TRUE" = 1, "FALSE" = 0.25)) +
scale_linewidth_manual(values = c("TRUE" = 1.35, "FALSE" = 0.5)) +
sis_theme +
scale_x_continuous(limits = c(1970, 2018),
breaks = c(1970, 2018)) +
scale_y_continuous(limits = c(0 , 100) ,
breaks =  seq(0, 100, 25)) +
guides(alpha = "none", linewidth = "none", colour = "none") +
xlab(NULL) +
ylab("Andel singelhushåll, %")
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/singelhushåll.html")
# Topp 5 uppskattade dödsorsaker per 100,000 personer
df <- read_excel("data/dödsorsaker.xlsx")
colnames(df) <- c("Land" , "Anledning" , "År" , "Antal")
df$Antal <- as.numeric(df$Antal)
df %>%
filter(Land == "Sweden" ,
År == 2021) %>%
summarize(Antal = sum(Antal))
df <- df %>%
filter(Land == "Sweden",
År == 2021) %>%
top_n(5, Antal) %>%
arrange(desc(Antal))
p <- df %>%
filter(Land == "Sweden") %>%
ggplot(aes(x = Antal, y = fct_reorder(Anledning, Antal),
text = paste("Anledning:" , Anledning,
"\nUppskattat antal/100,000:" , round(Antal, 2)))) +
geom_col(fill = "#5991E5") +
sis_theme +
scale_x_continuous(limits = c(0 , 110) ,
breaks =  seq(0, 100, 25)) +
xlab("Uppskattat antal dödsfall per 100,000 personer") + ylab(NULL)
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/dödsorsaker_sverige.html")
# ... jämfört med topp 5 i Low SDI-länder
df <- read_excel("data/dödsorsaker.xlsx")
colnames(df) <- c("Land" , "Anledning" , "År" , "Antal")
df$Antal <- as.numeric(df$Antal)
anledningar <- df %>%  # Hämta ut topp 5 anledningar i Low SDI
filter(Land == "Low SDI", År == 2021) %>%
slice_max(order_by = Antal, n = 5) %>%
pull(Anledning)
df <- df %>%  # Hämta ut värdena för Sweden och Low SDI utifrån dessa anledningar
filter(Land %in% c("Sweden", "Low SDI"),
År == 2021,
Anledning %in% anledningar) %>%
arrange(desc(Antal))
levels_y <- c("Enteric infections",
"Neoplasms",
"Chronic respiratory diseases",
"Cardiovascular diseases",
"Respiratory infections and tuberculosis")
levels_fill <- c("Sweden", "Low SDI")
p <- df %>%
ggplot(aes(
x = Antal,
y = factor(Anledning, levels = levels_y),
group = factor(Land, levels = levels_fill),
fill = factor(Land, levels = levels_fill),
text = paste("Anledning:" , Anledning,
"\nKategori:" , Land,
"\nUppskattat antal/100,000:" , round(Antal, 2)
)
)) +
geom_col(position = "dodge") +
scale_fill_manual(values = c(
"Sweden" = "#5991E5",
"Low SDI" = "#E56759"
)) +
sis_theme +
scale_x_continuous(limits = c(0 , 400),
breaks = seq(0, 400, 50)) +
labs(fill = "Kategori") +
xlab("Uppskattat antal dödsfall per 100,000 personer") +
ylab(NULL)
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/dödsorsaker_sverige_lowsdi.html")
levels = c("Sverige" ,
"Höginkomstländer",
"Övre medelinkomstländer" ,
"Undre medelinkomstländer" ,
"Låginkomstländer"
)
p <- df %>%
filter(Land %in% c("Sweden",
"High-income countries",
"Low-income countries",
"Lower-middle-income countries",
"Upper-middle-income countries")) %>%
mutate(
Land = case_when(
Land == "Sweden" ~ "Sverige",
Land == "High-income countries" ~ "Höginkomstländer",
Land == "Low-income countries" ~ "Låginkomstländer",
Land == "Lower-middle-income countries" ~ "Undre medelinkomstländer",
Land == "Upper-middle-income countries" ~ "Övre medelinkomstländer",
TRUE ~ Land
)
) %>%
ggplot(aes(x = År, y = Medel,
group = Land, colour = factor(Land, levels = levels),
text = paste("År:" , År ,
"\nLand:" , Land,
"\nMedellivslängd:" , round(Medel, 1)))) +
geom_line(linewidth = 1) +
scale_colour_manual(values = c(
"Sverige" = "#5991E5",
"Låginkomstländer" = "#D7E559",
"Undre medelinkomstländer" = "#E56759",
"Övre medelinkomstländer" = "#AD59E5",
"Höginkomstländer" = "#59E5AD"
)) +
sis_theme +
scale_x_continuous(limits = c(1950, max(df$År)),
breaks = c(1950, max(df$År))) +
scale_y_continuous(limits = c(0, max(df$Medel, na.rm = TRUE) + 1)) +
xlab(NULL) + ylab("Medellivslängd") + labs(colour = "Land/region")
p
df <- read.csv("https://ourworldindata.org/grapher/life-expectancy.csv?v=1&csvType=full&useColumnShortNames=true")
colnames(df) <- c("Land" , "Kod" , "År" , "Medel")
levels = c("Sverige" ,
"Höginkomstländer",
"Övre medelinkomstländer" ,
"Undre medelinkomstländer" ,
"Låginkomstländer"
)
p <- df %>%
filter(Land %in% c("Sweden",
"High-income countries",
"Low-income countries",
"Lower-middle-income countries",
"Upper-middle-income countries")) %>%
mutate(
Land = case_when(
Land == "Sweden" ~ "Sverige",
Land == "High-income countries" ~ "Höginkomstländer",
Land == "Low-income countries" ~ "Låginkomstländer",
Land == "Lower-middle-income countries" ~ "Undre medelinkomstländer",
Land == "Upper-middle-income countries" ~ "Övre medelinkomstländer",
TRUE ~ Land
)
) %>%
ggplot(aes(x = År, y = Medel,
group = Land, colour = factor(Land, levels = levels),
text = paste("År:" , År ,
"\nLand:" , Land,
"\nMedellivslängd:" , round(Medel, 1)))) +
geom_line(linewidth = 1) +
scale_colour_manual(values = c(
"Sverige" = "#5991E5",
"Låginkomstländer" = "#D7E559",
"Undre medelinkomstländer" = "#E56759",
"Övre medelinkomstländer" = "#AD59E5",
"Höginkomstländer" = "#59E5AD"
)) +
sis_theme +
scale_x_continuous(limits = c(1950, max(df$År)),
breaks = c(1950, max(df$År))) +
scale_y_continuous(limits = c(0, max(df$Medel, na.rm = TRUE) + 1)) +
xlab(NULL) + ylab("Medellivslängd") + labs(colour = "Land/region")
p
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/medellivslängd.html")
df <- read.csv("https://ourworldindata.org/grapher/happiness-cantril-ladder.csv?v=1&csvType=full&useColumnShortNames=true")
colnames(df) <- c("Land" , "Kod" , "År" , "Tillfredsställelse")
p <- df %>%
ggplot(aes(x = År, y = Tillfredsställelse, group = Land,
alpha = Land == "Sweden",
linewidth = Land == "Sweden",
colour = Land == "Sweden",
text = paste(
"År:" , År,
"\nLand:" , Land,
"\nLivstillfredsställelse:" , round(Tillfredsställelse, 1)
))) +
geom_line() +
scale_colour_manual(values = c("TRUE" = "#D7E559", "FALSE" = "#5991E5")) +
scale_alpha_manual(values = c("TRUE" = 1, "FALSE" = 0.25)) +
scale_linewidth_manual(values = c("TRUE" = 1.35, "FALSE" = 0.5)) +
sis_theme +
scale_x_continuous(breaks = c(min(df$År), max(df$År))) +
scale_y_continuous(limits = c(0, 10),
breaks = seq(0, 10, 2.5)) +
guides(alpha = "none", linewidth = "none", colour = "none") +
xlab(NULL) +
ylab("Livstillfredsställelse, skala 1-10")
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/satisfaction.html")
df <- read.csv("https://ourworldindata.org/grapher/annual-working-hours-per-worker.csv?v=1&csvType=full&useColumnShortNames=true")
colnames(df) <- c("Land" , "Kod", "År" , "Antal")
p <- df %>%
filter(Land == "Sweden") %>%
ggplot(aes(x = År, y = Antal  , group = 2,
text = paste("År:" , År ,
"\nArbetstimmar/år:" , comma(round(Antal))))) +
geom_line(linewidth = 1 , colour = "#5991E5") +
sis_theme +
scale_x_continuous(breaks = c(1870, 1980, 2017)) +
scale_y_continuous(limits = c(0 , 3500) ,
breaks =  seq(0, 3500, 500) ,
labels = comma) +
xlab(NULL) + ylab("Genomsnittligt antal arbetstimmar/anställd/år")
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/arbetstimmar_sverige.html")
# ... jämfört med andra länder
# "Sverige är även ett av de länder med flest antal lediga dagar från arbete i form av semester och röda dagar"
p <- df %>%
ggplot(aes(x = År, y = Antal, group = Land,
alpha = Land == "Sweden" ,
linewidth = Land == "Sweden" ,
colour = Land == "Sweden",
text = paste("År:" , År ,
"\nLand:" , Land,
"\nArbetstimmar/år:" , comma(round(Antal))))) +
geom_line() +
scale_colour_manual(values = c("TRUE" = "#D7E559", "FALSE" = "#5991E5")) +
scale_alpha_manual(values = c("TRUE" = 1, "FALSE" = 0.25)) +
scale_linewidth_manual(values = c("TRUE" = 1.35, "FALSE" = 0.5)) +
sis_theme +
scale_x_continuous(breaks = c(min(df$År), max(df$År))) +
scale_y_continuous(limits = c(0 , max(df$Antal + 100)) ,
breaks =  seq(0, 3500, 500) ,
labels = comma) +
guides(alpha = "none", linewidth = "none" ,colour = "none") +
xlab(NULL) +
ylab("Genomsnittligt antal arbetstimmar/anställd/år")
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/arbetstimmar.html")
df <- read_excel("data/co2_percapita.xlsx")
colnames(df) <- c("Land" , "År" , "Antal")
df$Antal <- as.numeric(df$Antal)
p <- df %>%
filter(Land == "Sweden") %>%
ggplot(aes(x = År, y = Antal  , group = 2,
text = paste("År:" , År ,
"\nKoldioxidutsläpp/person (ton):" , round(Antal, 1)))) +
geom_line(linewidth = 1 , colour = "#5991E5") +
sis_theme +
scale_x_continuous(breaks = c(1834, 1970, 2023)) +
scale_y_continuous(limits = c(0 , 12.5) ,
breaks =  seq(0, 12.5, 2.5)) +
xlab(NULL) + ylab("Koldioxidutsläpp per capita (ton)")
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/co2_sverige.html")
# ... jämfört med andra länder
p <- df %>%
filter(Land %in%c(
"Sweden",
"Asia",
"Africa",
"Europe",
"North America",
"Oceania",
"South America"
)
) %>%
ggplot(aes(x = År, y = Antal, group = Land, colour = Land,
text = paste("År:" , År ,
"\nLand:" , Land,
"\nKoldioxidutsläpp/person (ton):" , round(Antal, 1)))) +
geom_line() +
scale_colour_manual(values = c(
"Africa" = "#5991E5",
"Asia" = "#2DCCDE",
"Europe" = "#E56759",
"North America" = "#AD59E5",
"Oceania" = "#59E5AD",
"South America" = "#e5ad59",
"Sweden" = "#D7E559"
)) +
sis_theme +
scale_x_continuous(breaks = c(min(df$År), max(df$År))) +
xlab(NULL) +
ylab("Koldioxidutsläpp per capita (ton)")
img <- ggplotly(p, tooltip = "text") %>%
config(displayModeBar = F)
saveWidget(img, "images/co2.html")
